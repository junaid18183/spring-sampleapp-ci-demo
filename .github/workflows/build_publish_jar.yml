name: BuildPublish
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build_test_jar:
    name: Build and Test - Units & Integrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # - name: Build and analyze
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  # publish_jar:
  #   name: Publish - GitHub Packages
  #   runs-on: ubuntu-18.04
  #   needs: [build]
    # steps:
    #   - uses: actions/checkout@v1
    #   - name: Set up JDK 11
    #     uses: actions/setup-java@v1
    #     with:
    #       java-version: 11.0.4
    #   - name: Publish artifact on GitHub Packages
    #     run: mvn -B clean deploy -DskipTests
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GHCR_ACCESS_TOKEN }}
  docker-build:
      runs-on: ubuntu-latest
      needs: [publish_jar]
      steps:
        - name: Set Environment Variables
          run: |
            IMG="sampleapp"
            OWNER="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
            echo "BUILD_VER=1.0.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
            echo "IMG=${IMG}" >> $GITHUB_ENV
            echo "IMAGE=ghcr.io/${OWNER}/${IMG}" >> $GITHUB_ENV
            echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
            echo "GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
            echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1.2.0
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1.3.0
        - name: Login to GHCR
          if: github.event_name != 'pull_request'
          uses: docker/login-action@v1.9.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GHCR_ACCESS_TOKEN }}
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v3.3.0
          with:
            images: ${{ env.IMAGE }}
            flavor: |
              latest=false
            tags: |
              type=raw,enable=true,value=${{ env.BUILD_VER }}
            labels: |
              org.opencontainers.image.version=${{ env.BUILD_VER }}
              org.opencontainers.image.title=sampleapp
              org.opencontainers.image.date=${{ env.BUILD_DATE }}
              org.opencontainers.image.description=sampleapp
              org.opencontainers.image.vendor=JuvenSys

        - name: build/push
          uses: docker/bake-action@v1.4.2
          env:
            DOCKERFILE: Dockerfile
            VERSION: ${{ env.BUILD_VER }}
            LOAD_IMAGE_IN_CI: ${{ github.event_name == 'pull_request' }}
          with:
            files: |
              ./docker-bake.hcl
              ${{ steps.meta.outputs.bake-file }}
            targets: build
            pull: true
            load: ${{ github.event_name == 'pull_request' }}
            push: ${{ github.event_name != 'pull_request' }}